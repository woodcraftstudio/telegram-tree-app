document.addEventListener('DOMContentLoaded', () => {
    const webApp = Telegram.WebApp;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    webApp.ready();
    webApp.expand();
    webApp.enableClosingConfirmation();
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
    const options = document.querySelectorAll('.option');
    const actionSection = document.getElementById('actionSection');
    const selectedTreesSpan = document.getElementById('selectedTrees');
    const selectedStarsSpan = document.getElementById('selectedStars');
    const confirmedTreesSpan = document.getElementById('confirmedTrees');
    const payButton = document.getElementById('payButton');
    const loader = document.getElementById('loader');
    const confirmation = document.getElementById('confirmation');
    const userBalance = document.getElementById('userBalance');
    const balanceInfo = document.getElementById('balanceInfo');
    const step1 = document.getElementById('step1');
    const step2 = document.getElementById('step2');
    const step3 = document.getElementById('step3');
    
    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userStars = 0;
    let selectedOption = null;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    function initUser() {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
        // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –±–∞–ª–∞–Ω—Å
        userStars = Math.floor(Math.random() * 1000) + 50;
        
        userBalance.innerHTML = `‚òÖ –í–∞—à –±–∞–ª–∞–Ω—Å: ${userStars}`;
        balanceInfo.textContent = `${userStars} ‚òÖ`;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ deep link
        handleDeepLink();
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª—É–±–æ–∫–æ–π —Å—Å—ã–ª–∫–∏
    function handleDeepLink() {
        const initData = webApp.initDataUnsafe;
        if (initData.start_param) {
            const params = initData.start_param.split('_');
            if (params[0] === 'plant') {
                const treeCount = parseInt(params[1]);
                const option = document.querySelector(`.option[data-trees="${treeCount}"]`);
                if (option) {
                    option.click();
                }
            }
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    options.forEach(option => {
        option.addEventListener('click', () => {
            // –°–±—Ä–æ—Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤—ã–±–æ—Ä–∞
            options.forEach(opt => opt.classList.remove('selected'));
            
            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞
            option.classList.add('selected');
            selectedOption = {
                trees: parseInt(option.dataset.trees),
                stars: parseInt(option.dataset.stars)
            };
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            selectedTreesSpan.textContent = selectedOption.trees;
            selectedStarsSpan.textContent = selectedOption.stars;
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
            if (userStars < selectedOption.stars) {
                payButton.disabled = true;
                payButton.innerHTML = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥ ‚òÖ';
            } else {
                payButton.disabled = false;
                payButton.innerHTML = `–û–ø–ª–∞—Ç–∏—Ç—å ${selectedOption.stars} ‚òÖ`;
            }
            
            // –ü–æ–∫–∞–∑ —Å–µ–∫—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã
            actionSection.style.display = 'block';
            confirmation.style.display = 'none';
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —à–∞–≥–æ–≤
            step1.classList.add('active');
            step2.classList.add('active');
            step3.classList.remove('active');
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã –∑–≤–µ–∑–¥–∞–º–∏
    payButton.addEventListener('click', () => {
        if (!selectedOption) return;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        loader.style.display = 'block';
        payButton.disabled = true;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–ª–∞—Ç–µ–∂–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è Telegram Stars
        const paymentData = {
            title: `–ü–æ—Å–∞–¥–∫–∞ ${selectedOption.trees} ${getTreeWord(selectedOption.trees)}`,
            description: "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ª–µ—Å–æ–≤",
            currency: "XTR", // –ö–æ–¥ –≤–∞–ª—é—Ç—ã –¥–ª—è Telegram Stars
            prices: [
                { 
                    label: `–ü–æ—Å–∞–¥–∫–∞ ${selectedOption.trees} ${getTreeWord(selectedOption.trees)}`, 
                    amount: selectedOption.stars * 100 
                }
            ],
            payload: JSON.stringify({
                userId: webApp.initDataUnsafe.user?.id,
                trees: selectedOption.trees,
                stars: selectedOption.stars,
                timestamp: Date.now()
            })
        };
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂–Ω–æ–µ –æ–∫–Ω–æ
        webApp.openInvoice(paymentData, (status) => {
            loader.style.display = 'none';
            
            if (status === 'paid') {
                // –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞
                handleSuccessfulPayment();
            } else {
                // –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π
                webApp.showPopup({
                    title: '–û–ø–ª–∞—Ç–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
                    message: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç',
                    buttons: [{ type: 'ok' }]
                });
                payButton.disabled = false;
            }
        });
    });
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã —Å–ª–æ–≤–∞ "–¥–µ—Ä–µ–≤–æ"
    function getTreeWord(count) {
        const lastDigit = count % 10;
        const lastTwoDigits = count % 100;
        
        if (lastTwoDigits >= 11 && lastTwoDigits <= 19) return '–¥–µ—Ä–µ–≤—å–µ–≤';
        if (lastDigit === 1) return '–¥–µ—Ä–µ–≤–æ';
        if (lastDigit >= 2 && lastDigit <= 4) return '–¥–µ—Ä–µ–≤–∞';
        return '–¥–µ—Ä–µ–≤—å–µ–≤';
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    function handleSuccessfulPayment() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É)
        userStars -= selectedOption.stars;
        userBalance.innerHTML = `‚òÖ –í–∞—à –±–∞–ª–∞–Ω—Å: ${userStars}`;
        balanceInfo.textContent = `${userStars} ‚òÖ`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        actionSection.style.display = 'none';
        confirmedTreesSpan.textContent = selectedOption.trees;
        confirmation.style.display = 'block';
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —à–∞–≥–æ–≤
        step3.classList.add('active');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∫–µ
        savePurchase();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        webApp.showPopup({
            title: '–ü–æ—Å–∞–¥–∫–∞ –æ–ø–ª–∞—á–µ–Ω–∞! üå≥',
            message: `–í—ã –ø–æ—Å–∞–¥–∏–ª–∏ ${selectedOption.trees} ${getTreeWord(selectedOption.trees)}. –û—Ç—á—ë—Ç –ø—Ä–∏–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏.`,
            buttons: [{ type: 'close' }]
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            webApp.close();
        }, 15000);
    }
    
    // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
    function savePurchase() {
        const user = webApp.initDataUnsafe.user;
        const purchaseData = {
            userId: user?.id,
            username: user?.username || `id${user?.id}`,
            firstName: user?.first_name,
            lastName: user?.last_name,
            trees: selectedOption.trees,
            stars: selectedOption.stars,
            date: new Date().toISOString(),
            status: 'pending'
        };
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        console.log('–ü–æ–∫—É–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:', purchaseData);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ Telegram
        webApp.CloudStorage.setItem('last_purchase', JSON.stringify(purchaseData));
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–æ–º)
        webApp.sendData(JSON.stringify({
            action: 'tree_purchase',
            ...purchaseData
        }));
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
    function initTheme() {
        document.body.classList.toggle('dark', webApp.colorScheme === 'dark');
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    initUser();
    initTheme();
    webApp.onEvent('themeChanged', initTheme);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
    webApp.onEvent('messageSent', (eventData) => {
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', eventData);
    });
});